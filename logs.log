2024-04-30 18:18:22,217:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 18:18:22,218:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 18:18:22,218:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 18:18:22,218:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-30 18:18:23,216:WARNING:C:\Users\zhaoke\AppData\Local\Temp\ipykernel_19892\2226775431.py:75: UserWarning: PySoundFile failed. Trying audioread instead.
  audio, sample_rate = librosa.load(path, mono=True)

2024-04-30 18:18:23,216:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\librosa\core\audio.py:183: FutureWarning: librosa.core.audio.__audioread_load
	Deprecated as of librosa version 0.10.0.
	It will be removed in librosa version 1.0.
  y, sr_native = __audioread_load(path, offset, duration, dtype)

2024-04-30 18:18:23,483:WARNING:C:\Users\zhaoke\AppData\Local\Temp\ipykernel_19892\2226775431.py:75: UserWarning: PySoundFile failed. Trying audioread instead.
  audio, sample_rate = librosa.load(path, mono=True)

2024-04-30 18:18:23,484:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\librosa\core\audio.py:183: FutureWarning: librosa.core.audio.__audioread_load
	Deprecated as of librosa version 0.10.0.
	It will be removed in librosa version 1.0.
  y, sr_native = __audioread_load(path, offset, duration, dtype)

2024-04-30 18:22:52,411:INFO:PyCaret ClassificationExperiment
2024-04-30 18:22:52,411:INFO:Logging name: clf-default-name
2024-04-30 18:22:52,411:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-30 18:22:52,411:INFO:version 3.2.0
2024-04-30 18:22:52,411:INFO:Initializing setup()
2024-04-30 18:22:52,411:INFO:self.USI: 9bb3
2024-04-30 18:22:52,411:INFO:self._variable_keys: {'exp_id', '_available_plots', 'exp_name_log', 'fold_generator', 'USI', 'gpu_param', 'fold_shuffle_param', 'fold_groups_param', '_ml_usecase', 'X_train', 'gpu_n_jobs_param', 'is_multiclass', 'idx', 'memory', 'n_jobs_param', 'y_test', 'y', 'X_test', 'seed', 'y_train', 'log_plots_param', 'X', 'target_param', 'fix_imbalance', 'pipeline', 'html_param', 'data', 'logging_param'}
2024-04-30 18:22:52,411:INFO:Checking environment
2024-04-30 18:22:52,411:INFO:python_version: 3.8.5
2024-04-30 18:22:52,411:INFO:python_build: ('default', 'Sep  3 2020 21:29:08')
2024-04-30 18:22:52,411:INFO:machine: AMD64
2024-04-30 18:22:52,411:INFO:platform: Windows-10-10.0.19041-SP0
2024-04-30 18:22:52,418:INFO:Memory: svmem(total=34185900032, available=17166815232, percent=49.8, used=17019084800, free=17166815232)
2024-04-30 18:22:52,419:INFO:Physical Core: 14
2024-04-30 18:22:52,419:INFO:Logical Core: 20
2024-04-30 18:22:52,419:INFO:Checking libraries
2024-04-30 18:22:52,419:INFO:System:
2024-04-30 18:22:52,419:INFO:    python: 3.8.5 (default, Sep  3 2020, 21:29:08) [MSC v.1916 64 bit (AMD64)]
2024-04-30 18:22:52,419:INFO:executable: C:\Users\zhaoke\miniconda3\envs\torch-0\python.exe
2024-04-30 18:22:52,419:INFO:   machine: Windows-10-10.0.19041-SP0
2024-04-30 18:22:52,419:INFO:PyCaret required dependencies:
2024-04-30 18:22:52,448:INFO:                 pip: 23.2.1
2024-04-30 18:22:52,448:INFO:          setuptools: 68.0.0
2024-04-30 18:22:52,448:INFO:             pycaret: 3.2.0
2024-04-30 18:22:52,448:INFO:             IPython: 8.12.2
2024-04-30 18:22:52,448:INFO:          ipywidgets: 8.1.0
2024-04-30 18:22:52,448:INFO:                tqdm: 4.66.1
2024-04-30 18:22:52,448:INFO:               numpy: 1.24.4
2024-04-30 18:22:52,448:INFO:              pandas: 1.5.3
2024-04-30 18:22:52,448:INFO:              jinja2: 3.1.2
2024-04-30 18:22:52,448:INFO:               scipy: 1.10.1
2024-04-30 18:22:52,448:INFO:              joblib: 1.3.2
2024-04-30 18:22:52,448:INFO:             sklearn: 1.2.2
2024-04-30 18:22:52,448:INFO:                pyod: 1.1.3
2024-04-30 18:22:52,448:INFO:            imblearn: 0.12.2
2024-04-30 18:22:52,449:INFO:   category_encoders: 2.6.3
2024-04-30 18:22:52,449:INFO:            lightgbm: 4.3.0
2024-04-30 18:22:52,449:INFO:               numba: 0.57.1
2024-04-30 18:22:52,449:INFO:            requests: 2.31.0
2024-04-30 18:22:52,449:INFO:          matplotlib: 3.7.2
2024-04-30 18:22:52,449:INFO:          scikitplot: 0.3.7
2024-04-30 18:22:52,449:INFO:         yellowbrick: 1.5
2024-04-30 18:22:52,449:INFO:              plotly: 5.21.0
2024-04-30 18:22:52,449:INFO:    plotly-resampler: Not installed
2024-04-30 18:22:52,449:INFO:             kaleido: 0.2.1
2024-04-30 18:22:52,449:INFO:           schemdraw: 0.15
2024-04-30 18:22:52,449:INFO:         statsmodels: 0.14.1
2024-04-30 18:22:52,449:INFO:              sktime: 0.21.1
2024-04-30 18:22:52,449:INFO:               tbats: 1.1.3
2024-04-30 18:22:52,449:INFO:            pmdarima: 2.0.4
2024-04-30 18:22:52,449:INFO:              psutil: 5.9.5
2024-04-30 18:22:52,449:INFO:          markupsafe: 2.1.3
2024-04-30 18:22:52,449:INFO:             pickle5: Not installed
2024-04-30 18:22:52,449:INFO:         cloudpickle: 3.0.0
2024-04-30 18:22:52,449:INFO:         deprecation: 2.1.0
2024-04-30 18:22:52,449:INFO:              xxhash: 3.4.1
2024-04-30 18:22:52,449:INFO:           wurlitzer: Not installed
2024-04-30 18:22:52,449:INFO:PyCaret optional dependencies:
2024-04-30 18:22:52,453:INFO:                shap: Not installed
2024-04-30 18:22:52,453:INFO:           interpret: Not installed
2024-04-30 18:22:52,453:INFO:                umap: 0.5.6
2024-04-30 18:22:52,453:INFO:     ydata_profiling: Not installed
2024-04-30 18:22:52,453:INFO:  explainerdashboard: Not installed
2024-04-30 18:22:52,453:INFO:             autoviz: Not installed
2024-04-30 18:22:52,453:INFO:           fairlearn: Not installed
2024-04-30 18:22:52,453:INFO:          deepchecks: Not installed
2024-04-30 18:22:52,453:INFO:             xgboost: Not installed
2024-04-30 18:22:52,453:INFO:            catboost: Not installed
2024-04-30 18:22:52,453:INFO:              kmodes: Not installed
2024-04-30 18:22:52,453:INFO:             mlxtend: Not installed
2024-04-30 18:22:52,453:INFO:       statsforecast: Not installed
2024-04-30 18:22:52,453:INFO:        tune_sklearn: Not installed
2024-04-30 18:22:52,453:INFO:                 ray: Not installed
2024-04-30 18:22:52,453:INFO:            hyperopt: Not installed
2024-04-30 18:22:52,453:INFO:              optuna: Not installed
2024-04-30 18:22:52,453:INFO:               skopt: Not installed
2024-04-30 18:22:52,453:INFO:              mlflow: Not installed
2024-04-30 18:22:52,453:INFO:              gradio: Not installed
2024-04-30 18:22:52,453:INFO:             fastapi: Not installed
2024-04-30 18:22:52,453:INFO:             uvicorn: Not installed
2024-04-30 18:22:52,453:INFO:              m2cgen: Not installed
2024-04-30 18:22:52,453:INFO:           evidently: Not installed
2024-04-30 18:22:52,453:INFO:               fugue: Not installed
2024-04-30 18:22:52,453:INFO:           streamlit: Not installed
2024-04-30 18:22:52,453:INFO:             prophet: Not installed
2024-04-30 18:22:52,453:INFO:None
2024-04-30 18:22:52,453:INFO:Set up data.
2024-04-30 18:22:52,475:INFO:Set up folding strategy.
2024-04-30 18:22:52,475:INFO:Set up train/test split.
2024-04-30 18:22:52,481:INFO:Set up index.
2024-04-30 18:22:52,481:INFO:Assigning column types.
2024-04-30 18:22:52,485:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-30 18:22:52,505:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 18:22:52,506:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-30 18:22:52,589:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 18:22:52,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 18:22:52,610:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-30 18:22:52,610:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-30 18:22:52,622:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 18:22:52,622:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 18:22:52,622:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-30 18:22:52,643:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-30 18:22:52,655:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 18:22:52,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 18:22:52,675:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-30 18:22:52,688:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 18:22:52,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 18:22:52,688:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-30 18:22:52,720:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 18:22:52,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 18:22:52,752:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 18:22:52,752:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 18:22:52,754:INFO:Preparing preprocessing pipeline...
2024-04-30 18:22:52,755:INFO:Set up label encoding.
2024-04-30 18:22:52,755:INFO:Set up simple imputation.
2024-04-30 18:22:52,755:INFO:Set up column transformation.
2024-04-30 18:22:52,755:INFO:Set up feature normalization.
2024-04-30 18:22:52,780:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:22:53,061:INFO:Finished creating preprocessing pipeline.
2024-04-30 18:22:53,065:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\zhaoke\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['mfcc1', 'mfcc2', 'mfcc3', 'mfcc4',
                                             'mfcc5', 'mfcc6', 'mfcc7', 'mfcc8',
                                             'mfcc9', 'mfcc10', 'mfcc11',
                                             'mfcc12',...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-30 18:22:53,065:INFO:Creating final display dataframe.
2024-04-30 18:22:53,183:INFO:Setup _display_container:                     Description             Value
0                    Session id              1418
1                        Target        cough_type
2                   Target type            Binary
3                Target mapping    dry: 0, wet: 1
4           Original data shape       (1576, 189)
5        Transformed data shape       (1576, 188)
6   Transformed train set shape       (1103, 188)
7    Transformed test set shape        (473, 188)
8               Ignore features                 1
9              Numeric features               187
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14               Transformation              True
15        Transformation method       yeo-johnson
16                    Normalize              True
17             Normalize method            zscore
18               Fold Generator   StratifiedKFold
19                  Fold Number                10
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  clf-default-name
24                          USI              9bb3
2024-04-30 18:22:53,225:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 18:22:53,226:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 18:22:53,259:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 18:22:53,259:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-30 18:22:53,259:INFO:setup() successfully completed in 0.85s...............
2024-04-30 18:23:06,092:INFO:Initializing compare_models()
2024-04-30 18:23:06,092:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-30 18:23:06,092:INFO:Checking exceptions
2024-04-30 18:23:06,098:INFO:Preparing display monitor
2024-04-30 18:23:06,112:INFO:Initializing Logistic Regression
2024-04-30 18:23:06,112:INFO:Total runtime is 0.0 minutes
2024-04-30 18:23:06,114:INFO:SubProcess create_model() called ==================================
2024-04-30 18:23:06,114:INFO:Initializing create_model()
2024-04-30 18:23:06,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4CCFC8E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 18:23:06,114:INFO:Checking exceptions
2024-04-30 18:23:06,114:INFO:Importing libraries
2024-04-30 18:23:06,114:INFO:Copying training dataset
2024-04-30 18:23:06,120:INFO:Defining folds
2024-04-30 18:23:06,120:INFO:Declaring metric variables
2024-04-30 18:23:06,122:INFO:Importing untrained model
2024-04-30 18:23:06,124:INFO:Logistic Regression Imported successfully
2024-04-30 18:23:06,127:INFO:Starting cross validation
2024-04-30 18:23:06,129:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 18:23:08,307:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:08,317:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:08,318:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:08,327:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:08,347:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:08,347:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:08,349:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:08,351:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:08,354:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:08,357:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:08,655:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,657:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,659:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,667:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,668:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,670:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,678:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,680:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,681:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,692:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,694:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,695:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,713:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,715:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,717:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,781:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,782:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,784:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,792:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,793:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,794:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,797:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,798:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,800:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,810:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,811:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,813:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,835:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,837:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,838:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:08,847:INFO:Calculating mean and std
2024-04-30 18:23:08,849:INFO:Creating metrics dataframe
2024-04-30 18:23:08,852:INFO:Uploading results into container
2024-04-30 18:23:08,852:INFO:Uploading model into container now
2024-04-30 18:23:08,853:INFO:_master_model_container: 1
2024-04-30 18:23:08,853:INFO:_display_container: 2
2024-04-30 18:23:08,854:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1418, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-30 18:23:08,854:INFO:create_model() successfully completed......................................
2024-04-30 18:23:08,942:INFO:SubProcess create_model() end ==================================
2024-04-30 18:23:08,943:INFO:Creating metrics dataframe
2024-04-30 18:23:08,947:INFO:Initializing K Neighbors Classifier
2024-04-30 18:23:08,947:INFO:Total runtime is 0.047243905067443845 minutes
2024-04-30 18:23:08,950:INFO:SubProcess create_model() called ==================================
2024-04-30 18:23:08,950:INFO:Initializing create_model()
2024-04-30 18:23:08,950:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4CCFC8E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 18:23:08,951:INFO:Checking exceptions
2024-04-30 18:23:08,951:INFO:Importing libraries
2024-04-30 18:23:08,951:INFO:Copying training dataset
2024-04-30 18:23:08,955:INFO:Defining folds
2024-04-30 18:23:08,955:INFO:Declaring metric variables
2024-04-30 18:23:08,957:INFO:Importing untrained model
2024-04-30 18:23:08,959:INFO:K Neighbors Classifier Imported successfully
2024-04-30 18:23:08,963:INFO:Starting cross validation
2024-04-30 18:23:08,964:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 18:23:10,675:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:10,684:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:10,687:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:10,694:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:10,697:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:10,699:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:10,699:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:10,701:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:10,706:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:10,715:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:11,066:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,069:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,071:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,071:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,072:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,073:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,073:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,074:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,075:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,124:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,125:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,126:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,128:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,128:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,129:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,134:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,136:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,138:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,145:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,147:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,148:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,155:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,158:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,160:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,178:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,181:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,182:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,253:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,255:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,256:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,269:INFO:Calculating mean and std
2024-04-30 18:23:11,270:INFO:Creating metrics dataframe
2024-04-30 18:23:11,273:INFO:Uploading results into container
2024-04-30 18:23:11,273:INFO:Uploading model into container now
2024-04-30 18:23:11,273:INFO:_master_model_container: 2
2024-04-30 18:23:11,273:INFO:_display_container: 2
2024-04-30 18:23:11,274:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-04-30 18:23:11,274:INFO:create_model() successfully completed......................................
2024-04-30 18:23:11,354:INFO:SubProcess create_model() end ==================================
2024-04-30 18:23:11,355:INFO:Creating metrics dataframe
2024-04-30 18:23:11,360:INFO:Initializing Naive Bayes
2024-04-30 18:23:11,360:INFO:Total runtime is 0.08746719360351562 minutes
2024-04-30 18:23:11,361:INFO:SubProcess create_model() called ==================================
2024-04-30 18:23:11,361:INFO:Initializing create_model()
2024-04-30 18:23:11,361:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4CCFC8E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 18:23:11,362:INFO:Checking exceptions
2024-04-30 18:23:11,362:INFO:Importing libraries
2024-04-30 18:23:11,362:INFO:Copying training dataset
2024-04-30 18:23:11,366:INFO:Defining folds
2024-04-30 18:23:11,366:INFO:Declaring metric variables
2024-04-30 18:23:11,368:INFO:Importing untrained model
2024-04-30 18:23:11,370:INFO:Naive Bayes Imported successfully
2024-04-30 18:23:11,373:INFO:Starting cross validation
2024-04-30 18:23:11,375:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 18:23:11,401:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:11,404:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:11,406:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:11,410:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:11,411:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:11,416:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:11,421:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:11,421:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:11,422:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:11,426:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:11,723:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,724:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,725:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,731:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,732:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,733:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,759:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,760:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,761:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,765:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,766:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,767:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,769:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,770:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,771:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,772:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,773:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,774:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,785:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,786:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,787:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,796:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,797:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,798:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,864:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,866:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,866:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,867:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,867:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,868:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:11,878:INFO:Calculating mean and std
2024-04-30 18:23:11,878:INFO:Creating metrics dataframe
2024-04-30 18:23:11,880:INFO:Uploading results into container
2024-04-30 18:23:11,881:INFO:Uploading model into container now
2024-04-30 18:23:11,881:INFO:_master_model_container: 3
2024-04-30 18:23:11,881:INFO:_display_container: 2
2024-04-30 18:23:11,881:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-04-30 18:23:11,881:INFO:create_model() successfully completed......................................
2024-04-30 18:23:11,953:INFO:SubProcess create_model() end ==================================
2024-04-30 18:23:11,953:INFO:Creating metrics dataframe
2024-04-30 18:23:11,958:INFO:Initializing Decision Tree Classifier
2024-04-30 18:23:11,958:INFO:Total runtime is 0.09743181864420573 minutes
2024-04-30 18:23:11,960:INFO:SubProcess create_model() called ==================================
2024-04-30 18:23:11,960:INFO:Initializing create_model()
2024-04-30 18:23:11,960:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4CCFC8E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 18:23:11,960:INFO:Checking exceptions
2024-04-30 18:23:11,960:INFO:Importing libraries
2024-04-30 18:23:11,960:INFO:Copying training dataset
2024-04-30 18:23:11,964:INFO:Defining folds
2024-04-30 18:23:11,964:INFO:Declaring metric variables
2024-04-30 18:23:11,966:INFO:Importing untrained model
2024-04-30 18:23:11,969:INFO:Decision Tree Classifier Imported successfully
2024-04-30 18:23:11,972:INFO:Starting cross validation
2024-04-30 18:23:11,973:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 18:23:11,997:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,002:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,008:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,010:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,012:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,015:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,016:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,016:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,018:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,020:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,402:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,403:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,404:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,421:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,422:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,423:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,426:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,428:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,430:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,439:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,439:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,441:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,442:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,443:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,444:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,467:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,468:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,469:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,472:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,473:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,474:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,522:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,523:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,524:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,526:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,528:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,529:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,564:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,565:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,567:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:12,581:INFO:Calculating mean and std
2024-04-30 18:23:12,582:INFO:Creating metrics dataframe
2024-04-30 18:23:12,583:INFO:Uploading results into container
2024-04-30 18:23:12,584:INFO:Uploading model into container now
2024-04-30 18:23:12,584:INFO:_master_model_container: 4
2024-04-30 18:23:12,584:INFO:_display_container: 2
2024-04-30 18:23:12,585:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1418, splitter='best')
2024-04-30 18:23:12,585:INFO:create_model() successfully completed......................................
2024-04-30 18:23:12,666:INFO:SubProcess create_model() end ==================================
2024-04-30 18:23:12,666:INFO:Creating metrics dataframe
2024-04-30 18:23:12,671:INFO:Initializing SVM - Linear Kernel
2024-04-30 18:23:12,671:INFO:Total runtime is 0.1093025008837382 minutes
2024-04-30 18:23:12,674:INFO:SubProcess create_model() called ==================================
2024-04-30 18:23:12,674:INFO:Initializing create_model()
2024-04-30 18:23:12,674:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4CCFC8E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 18:23:12,674:INFO:Checking exceptions
2024-04-30 18:23:12,674:INFO:Importing libraries
2024-04-30 18:23:12,674:INFO:Copying training dataset
2024-04-30 18:23:12,681:INFO:Defining folds
2024-04-30 18:23:12,681:INFO:Declaring metric variables
2024-04-30 18:23:12,683:INFO:Importing untrained model
2024-04-30 18:23:12,685:INFO:SVM - Linear Kernel Imported successfully
2024-04-30 18:23:12,689:INFO:Starting cross validation
2024-04-30 18:23:12,691:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 18:23:12,716:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,717:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,718:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,727:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,727:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,730:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,730:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,731:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,732:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:12,737:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,052:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-04-30 18:23:13,053:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,054:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,055:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,059:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-04-30 18:23:13,060:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,061:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,062:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,097:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-04-30 18:23:13,098:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,099:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,100:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,102:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-04-30 18:23:13,102:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,104:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,105:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,116:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-04-30 18:23:13,116:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-04-30 18:23:13,117:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,117:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,117:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-04-30 18:23:13,118:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,118:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,118:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,119:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,119:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,119:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,120:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,127:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-04-30 18:23:13,128:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,129:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,130:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,151:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-04-30 18:23:13,151:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,152:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,153:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,198:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-04-30 18:23:13,199:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,200:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,201:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,204:INFO:Calculating mean and std
2024-04-30 18:23:13,204:INFO:Creating metrics dataframe
2024-04-30 18:23:13,206:INFO:Uploading results into container
2024-04-30 18:23:13,207:INFO:Uploading model into container now
2024-04-30 18:23:13,207:INFO:_master_model_container: 5
2024-04-30 18:23:13,207:INFO:_display_container: 2
2024-04-30 18:23:13,207:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1418, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-04-30 18:23:13,207:INFO:create_model() successfully completed......................................
2024-04-30 18:23:13,280:INFO:SubProcess create_model() end ==================================
2024-04-30 18:23:13,280:INFO:Creating metrics dataframe
2024-04-30 18:23:13,286:INFO:Initializing Ridge Classifier
2024-04-30 18:23:13,286:INFO:Total runtime is 0.11956182718276978 minutes
2024-04-30 18:23:13,289:INFO:SubProcess create_model() called ==================================
2024-04-30 18:23:13,289:INFO:Initializing create_model()
2024-04-30 18:23:13,289:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4CCFC8E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 18:23:13,289:INFO:Checking exceptions
2024-04-30 18:23:13,289:INFO:Importing libraries
2024-04-30 18:23:13,289:INFO:Copying training dataset
2024-04-30 18:23:13,293:INFO:Defining folds
2024-04-30 18:23:13,293:INFO:Declaring metric variables
2024-04-30 18:23:13,295:INFO:Importing untrained model
2024-04-30 18:23:13,297:INFO:Ridge Classifier Imported successfully
2024-04-30 18:23:13,301:INFO:Starting cross validation
2024-04-30 18:23:13,302:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 18:23:13,324:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,325:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,332:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,341:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,342:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,344:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,344:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,345:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,346:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,351:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,626:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-04-30 18:23:13,627:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,628:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,629:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,651:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-04-30 18:23:13,652:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,654:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,656:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,661:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-04-30 18:23:13,662:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,664:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,666:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,671:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-04-30 18:23:13,672:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,673:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,674:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,689:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-04-30 18:23:13,690:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,691:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,692:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,716:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-04-30 18:23:13,717:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,718:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,719:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,744:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-04-30 18:23:13,745:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,746:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,747:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,752:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-04-30 18:23:13,752:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,754:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,755:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,766:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-04-30 18:23:13,767:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,768:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,769:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,812:WARNING:C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\zhaoke\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-04-30 18:23:13,813:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,814:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,815:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:13,827:INFO:Calculating mean and std
2024-04-30 18:23:13,828:INFO:Creating metrics dataframe
2024-04-30 18:23:13,829:INFO:Uploading results into container
2024-04-30 18:23:13,830:INFO:Uploading model into container now
2024-04-30 18:23:13,830:INFO:_master_model_container: 6
2024-04-30 18:23:13,830:INFO:_display_container: 2
2024-04-30 18:23:13,830:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1418, solver='auto',
                tol=0.0001)
2024-04-30 18:23:13,830:INFO:create_model() successfully completed......................................
2024-04-30 18:23:13,898:INFO:SubProcess create_model() end ==================================
2024-04-30 18:23:13,898:INFO:Creating metrics dataframe
2024-04-30 18:23:13,903:INFO:Initializing Random Forest Classifier
2024-04-30 18:23:13,903:INFO:Total runtime is 0.12984582980473836 minutes
2024-04-30 18:23:13,905:INFO:SubProcess create_model() called ==================================
2024-04-30 18:23:13,905:INFO:Initializing create_model()
2024-04-30 18:23:13,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4CCFC8E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 18:23:13,906:INFO:Checking exceptions
2024-04-30 18:23:13,906:INFO:Importing libraries
2024-04-30 18:23:13,906:INFO:Copying training dataset
2024-04-30 18:23:13,909:INFO:Defining folds
2024-04-30 18:23:13,909:INFO:Declaring metric variables
2024-04-30 18:23:13,912:INFO:Importing untrained model
2024-04-30 18:23:13,914:INFO:Random Forest Classifier Imported successfully
2024-04-30 18:23:13,917:INFO:Starting cross validation
2024-04-30 18:23:13,918:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 18:23:13,941:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,943:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,946:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,955:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,955:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,956:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,960:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,961:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,962:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:13,962:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:14,529:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,529:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,530:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,531:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,532:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,532:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,544:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,545:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,546:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,577:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,579:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,581:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,775:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,775:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,776:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,776:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,777:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,777:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,805:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,805:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,806:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,807:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,807:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,808:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,808:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,808:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,810:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,961:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,962:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,963:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:14,974:INFO:Calculating mean and std
2024-04-30 18:23:14,975:INFO:Creating metrics dataframe
2024-04-30 18:23:14,977:INFO:Uploading results into container
2024-04-30 18:23:14,978:INFO:Uploading model into container now
2024-04-30 18:23:14,978:INFO:_master_model_container: 7
2024-04-30 18:23:14,978:INFO:_display_container: 2
2024-04-30 18:23:14,979:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1418, verbose=0, warm_start=False)
2024-04-30 18:23:14,979:INFO:create_model() successfully completed......................................
2024-04-30 18:23:15,045:INFO:SubProcess create_model() end ==================================
2024-04-30 18:23:15,045:INFO:Creating metrics dataframe
2024-04-30 18:23:15,051:INFO:Initializing Quadratic Discriminant Analysis
2024-04-30 18:23:15,051:INFO:Total runtime is 0.14897077083587645 minutes
2024-04-30 18:23:15,053:INFO:SubProcess create_model() called ==================================
2024-04-30 18:23:15,053:INFO:Initializing create_model()
2024-04-30 18:23:15,053:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4CCFC8E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 18:23:15,054:INFO:Checking exceptions
2024-04-30 18:23:15,054:INFO:Importing libraries
2024-04-30 18:23:15,054:INFO:Copying training dataset
2024-04-30 18:23:15,057:INFO:Defining folds
2024-04-30 18:23:15,057:INFO:Declaring metric variables
2024-04-30 18:23:15,060:INFO:Importing untrained model
2024-04-30 18:23:15,062:INFO:Quadratic Discriminant Analysis Imported successfully
2024-04-30 18:23:15,065:INFO:Starting cross validation
2024-04-30 18:23:15,067:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 18:23:15,091:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,098:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,101:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,101:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,102:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,104:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,107:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,108:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,114:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,115:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,418:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,420:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,421:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,444:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,446:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,446:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,483:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,485:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,486:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,492:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,493:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,494:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,498:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,498:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,500:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,500:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,501:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,501:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,507:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,508:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,510:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,515:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,516:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,517:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,545:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,546:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,547:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,567:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,568:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,569:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:15,587:INFO:Calculating mean and std
2024-04-30 18:23:15,588:INFO:Creating metrics dataframe
2024-04-30 18:23:15,589:INFO:Uploading results into container
2024-04-30 18:23:15,590:INFO:Uploading model into container now
2024-04-30 18:23:15,590:INFO:_master_model_container: 8
2024-04-30 18:23:15,590:INFO:_display_container: 2
2024-04-30 18:23:15,590:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-04-30 18:23:15,590:INFO:create_model() successfully completed......................................
2024-04-30 18:23:15,656:INFO:SubProcess create_model() end ==================================
2024-04-30 18:23:15,656:INFO:Creating metrics dataframe
2024-04-30 18:23:15,661:INFO:Initializing Ada Boost Classifier
2024-04-30 18:23:15,661:INFO:Total runtime is 0.15914944807688394 minutes
2024-04-30 18:23:15,663:INFO:SubProcess create_model() called ==================================
2024-04-30 18:23:15,663:INFO:Initializing create_model()
2024-04-30 18:23:15,663:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4CCFC8E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 18:23:15,663:INFO:Checking exceptions
2024-04-30 18:23:15,663:INFO:Importing libraries
2024-04-30 18:23:15,663:INFO:Copying training dataset
2024-04-30 18:23:15,667:INFO:Defining folds
2024-04-30 18:23:15,667:INFO:Declaring metric variables
2024-04-30 18:23:15,670:INFO:Importing untrained model
2024-04-30 18:23:15,672:INFO:Ada Boost Classifier Imported successfully
2024-04-30 18:23:15,676:INFO:Starting cross validation
2024-04-30 18:23:15,677:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 18:23:15,704:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,715:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,716:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,720:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,721:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,722:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,722:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,723:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,727:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:15,730:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:16,861:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,862:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,863:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,899:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,901:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,903:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,904:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,905:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,906:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,936:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,937:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,938:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,952:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,953:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,954:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,956:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,957:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,958:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,983:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,984:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:16,985:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:17,064:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:17,065:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:17,066:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:17,095:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:17,096:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:17,097:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:17,097:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:17,098:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:17,099:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:17,114:INFO:Calculating mean and std
2024-04-30 18:23:17,115:INFO:Creating metrics dataframe
2024-04-30 18:23:17,116:INFO:Uploading results into container
2024-04-30 18:23:17,117:INFO:Uploading model into container now
2024-04-30 18:23:17,117:INFO:_master_model_container: 9
2024-04-30 18:23:17,117:INFO:_display_container: 2
2024-04-30 18:23:17,117:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1418)
2024-04-30 18:23:17,117:INFO:create_model() successfully completed......................................
2024-04-30 18:23:17,184:INFO:SubProcess create_model() end ==================================
2024-04-30 18:23:17,184:INFO:Creating metrics dataframe
2024-04-30 18:23:17,190:INFO:Initializing Gradient Boosting Classifier
2024-04-30 18:23:17,190:INFO:Total runtime is 0.18461797237396238 minutes
2024-04-30 18:23:17,193:INFO:SubProcess create_model() called ==================================
2024-04-30 18:23:17,193:INFO:Initializing create_model()
2024-04-30 18:23:17,193:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4CCFC8E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 18:23:17,193:INFO:Checking exceptions
2024-04-30 18:23:17,193:INFO:Importing libraries
2024-04-30 18:23:17,193:INFO:Copying training dataset
2024-04-30 18:23:17,198:INFO:Defining folds
2024-04-30 18:23:17,198:INFO:Declaring metric variables
2024-04-30 18:23:17,200:INFO:Importing untrained model
2024-04-30 18:23:17,202:INFO:Gradient Boosting Classifier Imported successfully
2024-04-30 18:23:17,206:INFO:Starting cross validation
2024-04-30 18:23:17,208:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 18:23:17,234:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:17,238:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:17,239:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:17,246:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:17,247:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:17,247:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:17,248:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:17,250:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:17,250:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:17,256:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:21,982:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:21,984:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:21,985:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,000:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,001:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,002:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,018:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,020:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,022:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,123:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,124:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,125:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,152:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,153:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,154:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,175:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,176:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,177:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,232:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,234:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,235:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,256:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,257:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,258:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,279:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,280:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,281:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,426:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,427:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,428:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,443:INFO:Calculating mean and std
2024-04-30 18:23:22,444:INFO:Creating metrics dataframe
2024-04-30 18:23:22,446:INFO:Uploading results into container
2024-04-30 18:23:22,447:INFO:Uploading model into container now
2024-04-30 18:23:22,447:INFO:_master_model_container: 10
2024-04-30 18:23:22,447:INFO:_display_container: 2
2024-04-30 18:23:22,447:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1418, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-04-30 18:23:22,447:INFO:create_model() successfully completed......................................
2024-04-30 18:23:22,518:INFO:SubProcess create_model() end ==================================
2024-04-30 18:23:22,518:INFO:Creating metrics dataframe
2024-04-30 18:23:22,524:INFO:Initializing Linear Discriminant Analysis
2024-04-30 18:23:22,525:INFO:Total runtime is 0.27354806661605835 minutes
2024-04-30 18:23:22,527:INFO:SubProcess create_model() called ==================================
2024-04-30 18:23:22,527:INFO:Initializing create_model()
2024-04-30 18:23:22,528:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4CCFC8E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 18:23:22,528:INFO:Checking exceptions
2024-04-30 18:23:22,528:INFO:Importing libraries
2024-04-30 18:23:22,528:INFO:Copying training dataset
2024-04-30 18:23:22,532:INFO:Defining folds
2024-04-30 18:23:22,532:INFO:Declaring metric variables
2024-04-30 18:23:22,534:INFO:Importing untrained model
2024-04-30 18:23:22,536:INFO:Linear Discriminant Analysis Imported successfully
2024-04-30 18:23:22,539:INFO:Starting cross validation
2024-04-30 18:23:22,541:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 18:23:22,566:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:22,570:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:22,572:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:22,573:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:22,575:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:22,580:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:22,581:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:22,584:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:22,586:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:22,586:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:22,902:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,903:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,904:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,916:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,917:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,918:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,926:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,927:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,928:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,935:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,936:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,937:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,949:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,950:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,952:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,964:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,965:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,966:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:22,999:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,000:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,001:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,006:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,008:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,009:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,024:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,025:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,026:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,075:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,076:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,077:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,082:INFO:Calculating mean and std
2024-04-30 18:23:23,083:INFO:Creating metrics dataframe
2024-04-30 18:23:23,084:INFO:Uploading results into container
2024-04-30 18:23:23,085:INFO:Uploading model into container now
2024-04-30 18:23:23,085:INFO:_master_model_container: 11
2024-04-30 18:23:23,085:INFO:_display_container: 2
2024-04-30 18:23:23,085:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-04-30 18:23:23,085:INFO:create_model() successfully completed......................................
2024-04-30 18:23:23,150:INFO:SubProcess create_model() end ==================================
2024-04-30 18:23:23,150:INFO:Creating metrics dataframe
2024-04-30 18:23:23,156:INFO:Initializing Extra Trees Classifier
2024-04-30 18:23:23,156:INFO:Total runtime is 0.28406041860580444 minutes
2024-04-30 18:23:23,158:INFO:SubProcess create_model() called ==================================
2024-04-30 18:23:23,159:INFO:Initializing create_model()
2024-04-30 18:23:23,159:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4CCFC8E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 18:23:23,159:INFO:Checking exceptions
2024-04-30 18:23:23,159:INFO:Importing libraries
2024-04-30 18:23:23,159:INFO:Copying training dataset
2024-04-30 18:23:23,164:INFO:Defining folds
2024-04-30 18:23:23,164:INFO:Declaring metric variables
2024-04-30 18:23:23,167:INFO:Importing untrained model
2024-04-30 18:23:23,169:INFO:Extra Trees Classifier Imported successfully
2024-04-30 18:23:23,174:INFO:Starting cross validation
2024-04-30 18:23:23,175:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 18:23:23,196:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:23,199:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:23,202:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:23,210:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:23,210:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:23,213:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:23,215:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:23,218:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:23,220:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:23,222:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:23,646:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,649:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,650:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,661:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,662:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,663:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,664:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,665:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,665:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,723:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,725:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,726:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,754:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,756:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,757:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,770:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,771:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,773:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,786:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,788:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,790:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,816:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,818:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,819:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,847:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,848:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,849:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,893:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,894:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,895:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:23,907:INFO:Calculating mean and std
2024-04-30 18:23:23,908:INFO:Creating metrics dataframe
2024-04-30 18:23:23,911:INFO:Uploading results into container
2024-04-30 18:23:23,911:INFO:Uploading model into container now
2024-04-30 18:23:23,912:INFO:_master_model_container: 12
2024-04-30 18:23:23,912:INFO:_display_container: 2
2024-04-30 18:23:23,912:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1418, verbose=0, warm_start=False)
2024-04-30 18:23:23,912:INFO:create_model() successfully completed......................................
2024-04-30 18:23:23,976:INFO:SubProcess create_model() end ==================================
2024-04-30 18:23:23,976:INFO:Creating metrics dataframe
2024-04-30 18:23:23,982:INFO:Initializing Light Gradient Boosting Machine
2024-04-30 18:23:23,983:INFO:Total runtime is 0.2978502154350281 minutes
2024-04-30 18:23:23,984:INFO:SubProcess create_model() called ==================================
2024-04-30 18:23:23,985:INFO:Initializing create_model()
2024-04-30 18:23:23,985:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4CCFC8E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 18:23:23,985:INFO:Checking exceptions
2024-04-30 18:23:23,985:INFO:Importing libraries
2024-04-30 18:23:23,985:INFO:Copying training dataset
2024-04-30 18:23:23,989:INFO:Defining folds
2024-04-30 18:23:23,989:INFO:Declaring metric variables
2024-04-30 18:23:23,991:INFO:Importing untrained model
2024-04-30 18:23:23,993:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-30 18:23:23,998:INFO:Starting cross validation
2024-04-30 18:23:23,999:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 18:23:24,021:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:24,023:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:24,027:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:24,033:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:24,036:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:24,038:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:24,038:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:24,039:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:24,042:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:24,044:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:27,042:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,045:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,048:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,059:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,063:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,067:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,068:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,071:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,075:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,075:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,079:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,082:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,132:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,135:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,138:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,165:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,167:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,169:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,183:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,185:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,187:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,196:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,197:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,199:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,218:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,219:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,220:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,233:INFO:Calculating mean and std
2024-04-30 18:23:27,234:INFO:Creating metrics dataframe
2024-04-30 18:23:27,236:INFO:Uploading results into container
2024-04-30 18:23:27,237:INFO:Uploading model into container now
2024-04-30 18:23:27,237:INFO:_master_model_container: 13
2024-04-30 18:23:27,237:INFO:_display_container: 2
2024-04-30 18:23:27,238:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1418, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-30 18:23:27,238:INFO:create_model() successfully completed......................................
2024-04-30 18:23:27,315:INFO:SubProcess create_model() end ==================================
2024-04-30 18:23:27,315:INFO:Creating metrics dataframe
2024-04-30 18:23:27,322:INFO:Initializing Dummy Classifier
2024-04-30 18:23:27,322:INFO:Total runtime is 0.3534927288691203 minutes
2024-04-30 18:23:27,324:INFO:SubProcess create_model() called ==================================
2024-04-30 18:23:27,324:INFO:Initializing create_model()
2024-04-30 18:23:27,324:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F4CCFC8E80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 18:23:27,324:INFO:Checking exceptions
2024-04-30 18:23:27,324:INFO:Importing libraries
2024-04-30 18:23:27,324:INFO:Copying training dataset
2024-04-30 18:23:27,329:INFO:Defining folds
2024-04-30 18:23:27,330:INFO:Declaring metric variables
2024-04-30 18:23:27,331:INFO:Importing untrained model
2024-04-30 18:23:27,333:INFO:Dummy Classifier Imported successfully
2024-04-30 18:23:27,337:INFO:Starting cross validation
2024-04-30 18:23:27,338:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 18:23:27,372:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:27,372:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:27,374:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:27,378:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:27,379:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:27,389:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:27,390:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:27,391:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:27,392:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:27,394:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:27,680:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,681:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,682:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-30 18:23:27,682:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,713:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,714:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,715:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-30 18:23:27,715:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,722:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,723:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,724:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-30 18:23:27,724:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,735:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,736:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,737:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-30 18:23:27,737:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,738:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,739:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,740:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-30 18:23:27,740:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,747:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,748:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,748:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-30 18:23:27,749:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,752:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,753:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,754:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-30 18:23:27,754:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,774:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,775:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,775:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-30 18:23:27,776:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,789:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,790:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,790:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-30 18:23:27,791:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,793:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,795:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,795:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-04-30 18:23:27,796:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:23:27,799:INFO:Calculating mean and std
2024-04-30 18:23:27,799:INFO:Creating metrics dataframe
2024-04-30 18:23:27,801:INFO:Uploading results into container
2024-04-30 18:23:27,802:INFO:Uploading model into container now
2024-04-30 18:23:27,802:INFO:_master_model_container: 14
2024-04-30 18:23:27,802:INFO:_display_container: 2
2024-04-30 18:23:27,802:INFO:DummyClassifier(constant=None, random_state=1418, strategy='prior')
2024-04-30 18:23:27,802:INFO:create_model() successfully completed......................................
2024-04-30 18:23:27,870:INFO:SubProcess create_model() end ==================================
2024-04-30 18:23:27,870:INFO:Creating metrics dataframe
2024-04-30 18:23:27,882:INFO:Initializing create_model()
2024-04-30 18:23:27,882:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1418, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 18:23:27,882:INFO:Checking exceptions
2024-04-30 18:23:27,883:INFO:Importing libraries
2024-04-30 18:23:27,883:INFO:Copying training dataset
2024-04-30 18:23:27,887:INFO:Defining folds
2024-04-30 18:23:27,888:INFO:Declaring metric variables
2024-04-30 18:23:27,888:INFO:Importing untrained model
2024-04-30 18:23:27,888:INFO:Declaring custom model
2024-04-30 18:23:27,888:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-30 18:23:27,889:INFO:Cross validation set to False
2024-04-30 18:23:27,889:INFO:Fitting Model
2024-04-30 18:23:27,903:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:23:28,191:INFO:[LightGBM] [Info] Number of positive: 551, number of negative: 552
2024-04-30 18:23:28,195:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.003629 seconds.
2024-04-30 18:23:28,195:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-04-30 18:23:28,196:INFO:[LightGBM] [Info] Total Bins 47159
2024-04-30 18:23:28,200:INFO:[LightGBM] [Info] Number of data points in the train set: 1103, number of used features: 187
2024-04-30 18:23:28,200:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.499547 -> initscore=-0.001813
2024-04-30 18:23:28,200:INFO:[LightGBM] [Info] Start training from score -0.001813
2024-04-30 18:23:28,311:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1418, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-30 18:23:28,311:INFO:create_model() successfully completed......................................
2024-04-30 18:23:28,405:INFO:_master_model_container: 14
2024-04-30 18:23:28,405:INFO:_display_container: 2
2024-04-30 18:23:28,406:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1418, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-30 18:23:28,406:INFO:compare_models() successfully completed......................................
2024-04-30 18:23:51,961:INFO:Initializing create_model()
2024-04-30 18:23:51,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 18:23:51,961:INFO:Checking exceptions
2024-04-30 18:24:15,402:INFO:Initializing create_model()
2024-04-30 18:24:15,402:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-30 18:24:15,402:INFO:Checking exceptions
2024-04-30 18:24:15,413:INFO:Importing libraries
2024-04-30 18:24:15,413:INFO:Copying training dataset
2024-04-30 18:24:15,420:INFO:Defining folds
2024-04-30 18:24:15,420:INFO:Declaring metric variables
2024-04-30 18:24:15,423:INFO:Importing untrained model
2024-04-30 18:24:15,425:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-30 18:24:15,429:INFO:Starting cross validation
2024-04-30 18:24:15,430:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-30 18:24:15,454:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:24:15,461:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:24:15,463:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:24:15,463:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:24:15,467:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:24:15,469:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:24:15,471:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:24:15,472:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:24:15,474:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:24:15,476:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:24:18,560:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,568:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,576:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,590:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,599:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,606:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,688:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,691:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,694:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,694:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,695:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,697:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,700:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,702:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,702:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,704:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,704:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,706:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,713:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,715:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,717:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,726:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,729:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,732:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,785:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,787:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,789:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,816:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,817:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,818:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'wet') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-30 18:24:18,832:INFO:Calculating mean and std
2024-04-30 18:24:18,833:INFO:Creating metrics dataframe
2024-04-30 18:24:18,837:INFO:Finalizing model
2024-04-30 18:24:18,847:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\numpy\core\_methods.py:239: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-04-30 18:24:19,163:INFO:[LightGBM] [Info] Number of positive: 551, number of negative: 552
2024-04-30 18:24:19,167:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.003684 seconds.
2024-04-30 18:24:19,167:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-04-30 18:24:19,168:INFO:[LightGBM] [Info] Total Bins 47159
2024-04-30 18:24:19,170:INFO:[LightGBM] [Info] Number of data points in the train set: 1103, number of used features: 187
2024-04-30 18:24:19,170:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.499547 -> initscore=-0.001813
2024-04-30 18:24:19,170:INFO:[LightGBM] [Info] Start training from score -0.001813
2024-04-30 18:24:19,293:INFO:Uploading results into container
2024-04-30 18:24:19,294:INFO:Uploading model into container now
2024-04-30 18:24:19,299:INFO:_master_model_container: 15
2024-04-30 18:24:19,299:INFO:_display_container: 3
2024-04-30 18:24:19,300:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1418, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-04-30 18:24:19,300:INFO:create_model() successfully completed......................................
2024-04-30 18:24:21,180:INFO:Initializing plot_model()
2024-04-30 18:24:21,181:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1418, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, system=True)
2024-04-30 18:24:21,181:INFO:Checking exceptions
2024-04-30 18:24:21,186:INFO:Preloading libraries
2024-04-30 18:24:21,195:INFO:Copying training dataset
2024-04-30 18:24:21,195:INFO:Plot type: auc
2024-04-30 18:24:21,336:INFO:Fitting Model
2024-04-30 18:24:21,336:INFO:Scoring test/hold-out set
2024-04-30 18:24:21,443:INFO:Visual Rendered Successfully
2024-04-30 18:24:21,518:INFO:plot_model() successfully completed......................................
2024-04-30 18:24:27,585:INFO:Initializing plot_model()
2024-04-30 18:24:27,585:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1418, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F4D5565100>, system=True)
2024-04-30 18:24:27,585:INFO:Checking exceptions
2024-04-30 18:24:27,589:INFO:Preloading libraries
2024-04-30 18:24:27,596:INFO:Copying training dataset
2024-04-30 18:24:27,597:INFO:Plot type: confusion_matrix
2024-04-30 18:24:27,735:INFO:Fitting Model
2024-04-30 18:24:27,735:INFO:Scoring test/hold-out set
2024-04-30 18:24:27,795:INFO:Visual Rendered Successfully
2024-04-30 18:24:27,882:INFO:plot_model() successfully completed......................................
2024-04-30 18:26:03,006:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_e4dd60f90deb41fca6f33a7201332033_7a4b74984fe64fe0a8039d5271dac02f
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,006:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_47dffa57cad449f8abd332bcccc96b4b_7b4e5d05c75b469dba2839f16e3cbb53
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,006:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_e4dd60f90deb41fca6f33a7201332033_2a77e74001e347fe9b313a0132a7d1d2
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,006:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_45fc6d9d81844518b89dfccdccd596a1_ac494631a9a744c982dffa8aeb1413fb
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,006:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_e4dd60f90deb41fca6f33a7201332033_054c6f6999c84e5f9acb9990b77cb084
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,006:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_6fbb519658444225bec6181625c91da0_9749ee917c53404481a67dbfcb20934a
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,006:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_e4dd60f90deb41fca6f33a7201332033_bfc1c614e8a9491fa3fbdb5697781231
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,006:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_28e74e524d274426991ba71363fff912_5a5a452ffd854bdc90a0675b936ca099
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,006:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_e4dd60f90deb41fca6f33a7201332033_82b0d78076bc47d592f5ea581ffdca9c
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,006:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_9fae575217794a80b8d44d60e0ed90bc_34b4bb60478444ea89327f1aa823226e
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,006:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_e4dd60f90deb41fca6f33a7201332033_0c3638c102db441b9706742de5cf7e00
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_62167746355546a2b085242e53e0b15e_df7a8ea3f92b420ea6f92fab7be36af6
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_e4dd60f90deb41fca6f33a7201332033_37589a57b8a4487aa3fc80b73d5b2764
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_00eb1c04b3f747c1b83cc0a3744a2d8c_9cfaea12118e4657be19c948c50a58fa
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_e4dd60f90deb41fca6f33a7201332033_cd8f725b086848248b74f372f83c9e2d
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_06ff450e60b54c4eb00e17534c4ac35c_1920e6adbaec4b15ab021078dff8884b
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_e4dd60f90deb41fca6f33a7201332033_37bdc302e70947d8877868d31e960a3a
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_3c31a710ddaa4b81895b447987d80f57_f2aab716ca5d4c018c86639d345e5956
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_e4dd60f90deb41fca6f33a7201332033_49a387f49a664fbbbbc84305cc6dba5b
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_284813c8ae0a4e6aa5d1b97ba6cc9e3c_57cb1959487e4f84a2abcdc698249f4a
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_e4dd60f90deb41fca6f33a7201332033_9f45b277cea84dd884f96dd5cc5d463b
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_d18ed11c93e84b7fa75fc2d7f849eb36_12afc0cb4f0d4419a510d85cd50e07b6
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_e4dd60f90deb41fca6f33a7201332033_c045bccdb9664a9f8357f443cce4b257
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_3b096ad2b49f469bb96263f418a88714_0cfda9c44b6c4defb1c13c9b2f495598
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_e4dd60f90deb41fca6f33a7201332033_e9d31fcdfad142908e7965badba5f954
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_092e0c4328464269a96044c5861fec82_450dc8fd73e3481f8e2fca4bb9b89953
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_e4dd60f90deb41fca6f33a7201332033_b7aed9f2ef4e435ab7157142d78530b5
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_fd64f9d0444c4b65bdaeff16b62d64c9_8f71d4e45959462c8e414d9868a022ff
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_e4dd60f90deb41fca6f33a7201332033_7ab357d91ac643d993f7e569e14a7daf
  warnings.warn("Failed to delete temporary folder: {}"

2024-04-30 18:26:03,007:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\zhaoke\AppData\Local\Temp\joblib_memmapping_folder_19892_e4dd60f90deb41fca6f33a7201332033_97c6541a8d8f474291e28f85fd3f8173
  warnings.warn("Failed to delete temporary folder: {}"

2024-05-09 14:14:45,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 14:14:45,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 14:14:45,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 14:14:45,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-05-09 14:38:02,167:WARNING:C:\Users\zhaoke\AppData\Local\Temp\ipykernel_5788\2226775431.py:75: UserWarning: PySoundFile failed. Trying audioread instead.
  audio, sample_rate = librosa.load(path, mono=True)

2024-05-09 14:38:02,168:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\librosa\core\audio.py:183: FutureWarning: librosa.core.audio.__audioread_load
	Deprecated as of librosa version 0.10.0.
	It will be removed in librosa version 1.0.
  y, sr_native = __audioread_load(path, offset, duration, dtype)

2024-05-09 14:38:02,529:WARNING:C:\Users\zhaoke\AppData\Local\Temp\ipykernel_5788\2226775431.py:75: UserWarning: PySoundFile failed. Trying audioread instead.
  audio, sample_rate = librosa.load(path, mono=True)

2024-05-09 14:38:02,529:WARNING:C:\Users\zhaoke\miniconda3\envs\torch-0\lib\site-packages\librosa\core\audio.py:183: FutureWarning: librosa.core.audio.__audioread_load
	Deprecated as of librosa version 0.10.0.
	It will be removed in librosa version 1.0.
  y, sr_native = __audioread_load(path, offset, duration, dtype)

